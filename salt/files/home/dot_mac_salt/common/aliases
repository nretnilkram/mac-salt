# Sudo keep environment
alias sudo="sudo -E "

# Directory Shortcuts
alias sand="cd $HOME/Dropbox/Sandbox"
alias notes="cd $HOME/Dropbox/99/notes"
alias m="cd $MACSALTHOME"

REPO_DIR="$HOME/dev"
GG_DIR="$REPO_DIR/gg"
CLIENT_DIR="$REPO_DIR/gg_client"
AUTHZSVC_DIR="$REPO_DIR/gg-authz-service"
AHSVC_DIR="$REPO_DIR/gg-activityhistory-service"
REPOSVC_DIR="$REPO_DIR/gg-repo-service"
ANALYTICSSVC_DIR="$REPO_DIR/gg-analytics-service"
IMPACTSVC_DIR="$REPO_DIR/gg-impact-service"
CONVERSIONSVC_DIR="$REPO_DIR/gg-conversion-service"

alias dev="cd $HOME/dev"
alias d="dev"
alias da="cd $HOME/dev_alt"
alias gg="cd $GG_DIR"
alias u="cd $GG_DIR/gg-aws-infrastructure/utilities"
alias ggc="cd $CLIENT_DIR"
alias ggup="(cd $GG_DIR/local/docker && ./gg.sh start)"
alias ggdown="(cd $GG_DIR/local/docker && ./gg.sh stop)"


_star-display() {
  echo -e "\n***********************************"
  echo -e "* ${1-}"
  echo -e "***********************************\n"
}

build-server() { (
  _star-display "Building AUTHZSVC"
  cd $AUTHZSVC_DIR && mvn clean install -Dmaven.test.skip=true
  _star-display "Building ACTIVITYHISTORYSVC"
  cd $AHSVC_DIR && mvn clean install -Dmaven.test.skip=true
  _star-display "Building REPOSVC"
  cd $REPOSVC_DIR && mvn clean install -Dmaven.test.skip=true
); }

build-all() { (
  java8
  build-server
  _star-display "Building ANALYTICSSVC"
  cd $ANALYTICSSVC_DIR && mvn clean install -Dmaven.test.skip=true
  _star-display "Building IMPACTSVC"
  cd $IMPACTSVC_DIR && mvn clean install -Dmaven.test.skip=true
  java11
  _star-display "Building CONVERSIONSVC"
  cd $CONVERSIONSVC_DIR && mvn clean install -Dmaven.test.skip=true
); }

populate-data() { (cd $CLIENT_DIR && npm run buildOrg); }

COMMON_OPTIONS=(-Dgreenlight.application.properties=conf/application-dev.properties -Dlogback.configurationFile=logback.xml -classpath "target/*:target/lib/*")

start-repo() { (cd $REPOSVC_DIR && java "-Dcom.sun.management.jmxremote" "-Dcom.sun.management.jmxremote.port=9990" "-Dcom.sun.management.jmxremote.rmi.port=9990" "-Dcom.sun.management.jmxremote.authenticate=false" "-Dcom.sun.management.jmxremote.ssl=false" "${COMMON_OPTIONS[@]}" -Dderby.stream.error.file=RepositoryRoot/log/derby.log -Dfile.encoding=UTF-8 com.greenlight.camel.CamelMain); }
start-analytics() { (cd $ANALYTICSSVC_DIR/target && java "-Dcom.sun.management.jmxremote" "-Dcom.sun.management.jmxremote.port=9994" "-Dcom.sun.management.jmxremote.rmi.port=9994" "-Dcom.sun.management.jmxremote.authenticate=false" "-Dcom.sun.management.jmxremote.ssl=false" -jar greenlight-analytics-service.jar); }
start-conversion() { (cd $CONVERSIONSVC_DIR && java "-Dcom.sun.management.jmxremote" "-Dcom.sun.management.jmxremote.port=9995" "-Dcom.sun.management.jmxremote.rmi.port=9995" "-Dcom.sun.management.jmxremote.authenticate=false" "-Dcom.sun.management.jmxremote.ssl=false" "${COMMON_OPTIONS[@]}" com.greenlight.convert.ConversionApplication); }
start-history() { (cd $AHSVC_DIR && \cp -vf logback.xml target/ && java "-Dcom.sun.management.jmxremote" "-Dcom.sun.management.jmxremote.port=9991" "-Dcom.sun.management.jmxremote.rmi.port=9991" "-Dcom.sun.management.jmxremote.authenticate=false" "-Dcom.sun.management.jmxremote.ssl=false" "${COMMON_OPTIONS[@]}" com.greenlight.camel.CamelMain); }
start-auth() { (cd $AUTHZSVC_DIR && java "-Dcom.sun.management.jmxremote" "-Dcom.sun.management.jmxremote.port=9992" "-Dcom.sun.management.jmxremote.rmi.port=9992" "-Dcom.sun.management.jmxremote.authenticate=false" "-Dcom.sun.management.jmxremote.ssl=false" "${COMMON_OPTIONS[@]}" com.greenlight.idm.CamelMain); }
start-impact() { (cd $IMPACTSVC_DIR && java "-Dcom.sun.management.jmxremote" "-Dcom.sun.management.jmxremote.port=9993" "-Dcom.sun.management.jmxremote.rmi.port=9993" "-Dcom.sun.management.jmxremote.authenticate=false" "-Dcom.sun.management.jmxremote.ssl=false" -jar target/greenlight-impact-service.jar); }
start-client() { (cd $CLIENT_DIR && npm start); }

ggrmemails () {
  du -sh /var/tmp/emails
  ls -1 /var/tmp/emails | wc -l
  find /var/tmp/emails -type f \( -iname '*.json' -o -iname '*.html' \) -exec rm '{}' +
}

start-server() { start-history & start-auth & start-repo & }
stop-server() { jobs -p | xargs -n1 pkill -SIGINT -g; }

## For My Proxy Tunnel
alias bats='ssh va-bastion'
alias proxy-on='ssh -fN vault-tower.greenlight.guru'
alias po='proxy-on'
## These do not seem to work as is.  Cannot find control file
alias proxy-check='ssh -o ControlPath=~/.ssh/sockets/%C -O check vault-tower.greenlight.guru'
alias pc='proxy-check'
alias proxy-off='ssh -o ControlPath=~/.ssh/sockets/%C -O exit vault-tower.greenlight.guru'
alias poff='proxy-off'

alias clear_sockets='rm ~/.ssh/sockets/* && killall ssh'

# Tar Shortcuts
alias tarup="tar -cvzf"
alias untar="tar -xvf"

# Helpful Shortcuts
alias pjt="python -mjson.tool"
alias unset_proxy="unset http_proxy && unset https_proxy && unset HTTP_PROXY && unset HTTPS_PROXY"
alias up=unset_proxy
alias beps="bundle exec padrino start"
alias ber="bundle exec ruby"
alias be="bundle exec"
alias copy_current_branch="git branch | grep '*' | tr -d '* ' | tr -d '\n' | pbcopy"
alias ccb=copy_current_branch
alias ducks="du -cks * | sort -rn | head"
alias dush="sudo du -sh .[!.]* *"
alias show_hidden="defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app"
alias hide_hidden="defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app"
alias drive_list="diskutil list"
alias internal_ip="ifconfig | awk '/inet/ {print \$2}' | grep '192\|10\|172' | grep -v ':'"
alias external_ip="curl https://ip.nretnil.com -4"

# Editor
alias edit='atom'

# force /usr/local/bin/tidy instead of mac built in version
alias tidy='/usr/local/bin/tidy'

# Service Helpers
alias nginx_enable="sudo cp /usr/local/opt/nginx/homebrew.mxcl.nginx.plist /Library/LaunchDaemons/"
alias nginx_disable="sudo rm /Library/LaunchDaemons/homebrew.mxcl.nginx.plist"
alias nginx_stop="sudo launchctl unload /Library/LaunchDaemons/homebrew.mxcl.nginx.plist"
alias nginx_start="sudo launchctl load -w /Library/LaunchDaemons/homebrew.mxcl.nginx.plist"
alias nginx_restart="nginx_stop && nginx_start"

alias h2o_enable="sudo cp /usr/local/opt/h2o/homebrew.mxcl.h2o.plist /Library/LaunchDaemons/"
alias h2o_disable="sudo rm /Library/LaunchDaemons/homebrew.mxcl.h2o.plist"
alias h2o_stop="sudo launchctl unload /Library/LaunchDaemons/homebrew.mxcl.h2o.plist"
alias h2o_start="sudo launchctl load -w /Library/LaunchDaemons/homebrew.mxcl.h2o.plist"
alias h2o_restart="h2o_stop && h2o_start"

alias dnsmasq_enable="sudo cp /usr/local/opt/dnsmasq/homebrew.mxcl.dnsmasq.plist /Library/LaunchDaemons/"
alias dnsmasq_disable="sudo rm /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist"
alias dnsmasq_stop="sudo launchctl unload /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist"
alias dnsmasq_start="sudo launchctl load -w /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist"
alias dnsmasq_restart="dnsmasq_stop && dnsmasq_start"

alias mysql_enable="sudo cp /usr/local/opt/mysql/homebrew.mxcl.mysql.plist $HOME/Library/LaunchAgents/"
alias mysql_disable="sudo rm $HOME/Library/LaunchAgents/homebrew.mxcl.mysql.plist"
alias mysql_stop="launchctl unload $HOME/Library/LaunchAgents/homebrew.mxcl.mysql.plist"
alias mysql_start="launchctl load -w $HOME/Library/LaunchAgents/homebrew.mxcl.mysql.plist"
alias mysql_restart="mysql_stop && mysql_start"

alias postgres_enable="sudo cp /usr/local/opt/postgresql/homebrew.mxcl.postgresql.plist $HOME/Library/LaunchAgents/"
alias postgres_disable="sudo rm $HOME/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"
alias postgres_stop="launchctl unload $HOME/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"
alias postgres_start="launchctl load -w $HOME/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"
alias postgres_restart="postgres_stop && postgres_start"

alias mongodb_enable="sudo cp /usr/local/opt/mongodb/homebrew.mxcl.mongodb.plist $HOME/Library/LaunchAgents/"
alias mongodb_disable="sudo rm $HOME/Library/LaunchAgents/homebrew.mxcl.mongodb.plist"
alias mongodb_stop="launchctl unload $HOME/Library/LaunchAgents/homebrew.mxcl.mongodb.plist"
alias mongodb_start="launchctl load -w $HOME/Library/LaunchAgents/homebrew.mxcl.mongodb.plist"
alias mongodb_restart="mongodb_stop && mongodb_start"
